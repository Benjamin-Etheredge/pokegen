# This is a basic workflow to help you get started with Actions

name: AE

# Controls when the action will run. 
on:
  push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted,gpu]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      repo_token: ${{ secrets.GITHUB_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: requirements
        run: pip install -r requirements.txt

      - name: pull_data
        run: |
          dvc pull data/raw/sprites.dvc
          #dvc pull ae_dense_train ae_conv_train

          ## Pulling training data is slow. Only do if needed
          #dvc status ae_conv_train ae_dense_train
          #if [ $? -ne 0 ]
          #then
            #echo "Pulling training data..."
            #dvc pull data/raw/sprites.dvc
          #fi
          #echo "done"

      - name: train_conv_ae
        run: |
          dvc pull ae_conv_train
          dvc repro ae_conv_train
          dvc push ae_conv_train

      - name: report_conv
        run: |
          echo "# Conv Autoencoder" >> report.md
          scripts/autoencoder_report.sh conv >> report.md

          echo "## Generated" >> report.md
          gen_dir=reports/autoencoder/conv/gen
          for f in $(ls $gen_dir/*.gif)
          do
            echo "Publishing $f"
            cml-publish "$f" --md >> report.md
          done
          cml-send-github-check report.md 

      # Dense
      - name: train_dense_ae
        run: |
          dvc pull ae_dense_train
          dvc repro ae_dense_train
          dvc push ae_dense_train

      - name: report_dense
        run: |
          echo "# Dense Autoencoder" >> report.md
          scripts/autoencoder_report.sh dense >> report.md

          echo "## Generated" >> report.md
          gen_dir=reports/autoencoder/dense/gen
          for f in $(ls $gen_dir/*.gif)
          do
            echo "Publishing $f"
            cml-publish "$f" --md >> report.md
          cml-send-github-check report.md 

