# This is a basic workflow to help you get started with Actions

name: Autoencoder Training

# Controls when the action will run. 
on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'dvc.yaml'
      - 'params.yaml'
      - 'scripts/**'
      - 'requirements.txt'
      - 'scripts/*reports.sh'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    runs-on: [self-hosted,gpu,training]

    container:
      image: dvcorg/cml-py3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        SHOULD_TQDM: 0  # disables tqdm in 'src/train_ae.py'
      options: --gpus all --shm-size=4G
    timeout-minutes: 1440  # Increased job runtime since ML is slow

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: requirements
        run: pip install -r requirements.txt -e .

      - name: pull_data
        run: |
          dvc pull data/external/sprites.dvc

      - name: train_ae_dense
        run: |
          dvc pull --run-cache train@ae_dense
          dvc repro train@ae_dense
          dvc push --run-cache train@ae_dense

      - name: report_dense
        run: |
          scripts/autoencoder_report.sh ae dense >> report.md
          cml-send-github-check report.md 

      - name: train_ae_conv
        run: |
          dvc pull --run-cache train@ae_conv
          dvc repro train@ae_conv
          dvc push --run-cache train@ae_conv

      - name: report_conv
        run: |
          scripts/autoencoder_report.sh ae conv >> report.md
          cml-send-github-check report.md 

      - name: train_vae_dense
        run: |
          dvc pull --run-cache train@vae_dense
          dvc repro train@vae_dense
          dvc push --run-cache train@vae_dense

      - name: report_vae_dense
        run: |
          scripts/autoencoder_report.sh vae dense >> report.md
          cml-send-github-check report.md 

      - name: train_vae_conv
        run: |
          dvc pull --run-cache train@vae_conv
          dvc repro train@vae_conv
          dvc push --run-cache train@vae_conv

      - name: report_conv
        run: |
          scripts/autoencoder_report.sh vae conv >> report.md
          cml-send-github-check report.md 

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Latest Github Action DVC Run"
          file_pattern: dvc.lock

      # Update to final report
      - name: report_all
        run: |
          scripts/all_autoencoder_reports.sh > report.md
          cml-send-comment report.md
